{"version":3,"file":"LogVault.js","names":["_winston","require","_winston2","_interopRequireDefault","_path","_path2","_ip","_ip2","_mongodb","_mongodb2","_graylog","_graylog2","_telegram","_telegram2","_ioredis","_ioredis2","_sha","_sha2","_gelfPro","_winstonGraylog","_winstonGraylog2","_Notificator","_Notificator2","_axios","_axios2","obj","__esModule","default","transports","combine","timestamp","printf","winston","format","LogVault","constructor","config","levels","error","warn","info","http","verbose","debug","silly","maxLevel","appName","trackNodeEnv","trackServerIp","Object","keys","includes","Error","JSON","stringify","winstonLogger","createLogger","level","exitOnError","forEach","message","options","log","withConsole","colors","addColors","consoleFormat","output","transportConsole","Console","colorize","simple","add","withFiles","logPath","path","resolve","__dirname","fileMaxSize","fileStoragePeriod","logPathCombined","logPathError","logPathFile","logPathErrorFile","auditFile","transportFileCombined","DailyRotateFile","filename","datePattern","maxSize","maxFiles","transportFileError","prettyPrint","withMongo","mongo","MongoDB","withGraylog","transportGraylog","graylogTransport","metadata","process","env","npm_package_name","log_level","Date","app","NODE_ENV","serverIp","ip","address","redis","notificators","notificator","stringifiedData","stringifiedMessage","matched","regExp","test","hash","sha256","channels","channel","set","capture","methods","method","console","args","messages","values","dismissExceptions","on","e","stack","trackNotifications","redisOptions","Redis","push","Notificator","queueNotifications","telegram","setInterval","length","notification","get","url","token","res","axios","data","chat_id","group","text","timeout","ok","del","exports"],"sources":["../src/LogVault.js"],"sourcesContent":["import winston, { loggers } from \"winston\";\nimport \"winston-daily-rotate-file\";\nimport path from \"path\";\nimport ip from \"ip\";\nimport mongoTransport from \"./transports/mongodb\";\nimport graylogTransport from \"./transports/graylog\";\nimport telegramTransport from \"./transports/telegram\";\nimport Redis from \"ioredis\";\nimport sha256 from \"sha256\";\nimport { message } from \"gelf-pro\";\nimport WinstonGraylog2 from \"winston-graylog2\";\nrequire(\"winston-mongodb\");\nconst transports = require(\"winston-logstash\");\nimport Notificator from \"./Notificator\";\nimport axios from \"axios\";\n\nconst { combine, timestamp, printf } = winston.format;\n\nexport default class LogVault {\n  constructor(config = {}) {\n    // defaults\n    this.levels = {\n      error: 0,\n      warn: 1,\n      info: 2,\n      http: 3,\n      verbose: 4,\n      debug: 5,\n      silly: 6\n    };\n    const {\n      maxLevel = \"info\",\n      appName,\n      trackNodeEnv = true,\n      trackServerIp = true\n    } = config;\n\n    if (!Object.keys(this.levels).includes(maxLevel))\n      throw new Error(\n        `maxLevel \"${maxLevel}\" value is not included into ${JSON.stringify(\n          this.levels\n        )}`\n      );\n\n    this.maxLevel = maxLevel;\n    this.appName = appName;\n    this.trackNodeEnv = trackNodeEnv;\n    this.trackServerIp = trackServerIp;\n\n    this.winstonLogger = winston.createLogger({\n      levels: this.levels,\n      level: this.maxLevel,\n      exitOnError: false\n    });\n\n    Object.keys(this.levels).forEach((level) => {\n      this[level] = (message, options = {}) => {\n        options.level = level;\n        this.log(message, options);\n      };\n    });\n\n    return this;\n  }\n\n  withConsole(options = {}) {\n    const { level = this.maxLevel } = options;\n\n    const colors = {\n      error: \"red\",\n      warn: \"yellow\",\n      info: \"green\",\n      http: \"blue\",\n      verbose: \"magenta\",\n      debug: \"grey\",\n      silly: \"grey\"\n    };\n    winston.addColors(colors);\n\n    const consoleFormat = printf(({ level, message, timestamp }) => {\n      if (typeof message === \"object\")\n        message = \"\\n\" + JSON.stringify(message, null, 2);\n      const output = `\\t${timestamp} ${level} ${message}`;\n      return output;\n    });\n\n    const transportConsole = new winston.transports.Console({\n      level,\n      format: winston.format.combine(\n        timestamp(),\n        winston.format.colorize(),\n        winston.format.simple(),\n        consoleFormat\n      )\n    });\n\n    this.winstonLogger.add(transportConsole);\n    this.transportConsole = transportConsole;\n    return this;\n  }\n\n  withFiles(options = {}) {\n    const {\n      logPath = path.resolve(__dirname, \"logs\"),\n      fileMaxSize = \"1m\",\n      fileStoragePeriod = \"14d\"\n    } = options;\n    const logPathCombined = path.resolve(logPath, \"combined\");\n    const logPathError = path.resolve(logPath, \"error\");\n    const logPathFile = path.resolve(logPathCombined, \"combined-%DATE%.log\");\n    const logPathErrorFile = path.resolve(logPathError, \"error-%DATE%.log\");\n    const auditFile = path.resolve(logPath, \"audit\");\n    const transportFileCombined = new winston.transports.DailyRotateFile({\n      filename: logPathFile,\n      level: \"http\",\n      // format: combine(timestamp(), winston.format.prettyPrint()),\n      auditFile,\n      datePattern: \"YYYY-MM-DD\",\n      maxSize: fileMaxSize,\n      maxFiles: fileStoragePeriod\n    });\n    const transportFileError = new winston.transports.DailyRotateFile({\n      filename: logPathErrorFile,\n      level: \"error\",\n      format: combine(timestamp(), winston.format.prettyPrint()),\n      auditFile,\n      datePattern: \"YYYY-MM-DD\",\n      maxSize: fileMaxSize,\n      maxFiles: fileStoragePeriod\n    });\n\n    this.winstonLogger.add(transportFileCombined);\n    this.winstonLogger.add(transportFileError);\n    this.transportFileCombined = transportFileCombined;\n    this.transportFileError = transportFileError;\n\n    return this;\n  }\n\n  withMongo(options) {\n    if (!options.level) options.level = this.maxLevel;\n    const mongo = new winston.transports.MongoDB(options);\n    this.winstonLogger.add(mongo);\n    return this;\n  }\n\n  withGraylog(options = {}) {\n    if (!options.level) options.level = this.maxLevel;\n    const transportGraylog = new graylogTransport({\n      ...options\n    });\n    this.winstonLogger.add(transportGraylog);\n    return this;\n  }\n\n  log(message, options = {}) {\n    const { level = \"info\" } = options;\n\n    const metadata = {\n      // message,\n      process: process.env.npm_package_name,\n      log_level: level,\n      timestamp: new Date()\n    };\n    if (this.appName) metadata.app = this.appName;\n    if (this.trackNodeEnv) metadata.env = process.env.NODE_ENV;\n    if (this.trackServerIp) metadata.serverIp = ip.address();\n\n    this.winstonLogger.log(level, {\n      message,\n      metadata\n    });\n\n    if (this.redis && this.notificators) {\n      this.notificators.forEach((notificator) => {\n        if (\n          notificator.level &&\n          this.levels[level] > this.levels[notificator.level]\n        )\n          return;\n        metadata.message = message;\n        const stringifiedData = JSON.stringify(metadata);\n        const stringifiedMessage =\n          typeof message === \"string\" ? message : JSON.stringify(message);\n        const matched = notificator.regExp.test(stringifiedMessage);\n        if (!matched) return;\n        const hash = sha256(stringifiedData);\n        notificator.channels.forEach((channel) => {\n          this.redis.set(`log-vault:alarm:${channel}:${hash}`, stringifiedData);\n        });\n      });\n    }\n  }\n\n  capture(options) {\n    const methods = [\"log\", ...Object.keys(this.levels)];\n    methods.forEach((method) => {\n      console[method] = (...args) => {\n        const messages = Object.values(args);\n        const level = method === \"log\" ? \"info\" : method;\n        messages.forEach((message) => this.log(message, { level }));\n      };\n    });\n\n    if (options?.dismissExceptions) return;\n    process.on(\"uncaughtException\", (e) => {\n      this.log(e.stack, { level: \"error\" });\n    });\n  }\n\n  trackNotifications(options) {\n    const { redisOptions = {}, notificators } = options;\n    this.redis = new Redis(redisOptions);\n    this.notificators = [];\n    notificators.forEach((options) =>\n      this.notificators.push(new Notificator(options))\n    );\n    return this;\n  }\n\n  queueNotifications(options = {}) {\n    const { telegram = null } = options;\n    if (telegram && this.redis) {\n      setInterval(async () => {\n        const keys = await this.redis.keys(\"log-vault:alarm:telegram:*\");\n        if (keys && keys.length) {\n          const notification = await this.redis.get(keys[0]);\n          if (notification) {\n            const url = `https://api.telegram.org/bot${telegram.token}/sendMessage`;\n            const res = await axios({\n              url,\n              method: \"post\",\n              data: {\n                chat_id: telegram.group,\n                text: notification\n              },\n              timeout: 5000\n            });\n            if (res && res.data && res.data.ok === true) {\n              await this.redis.del(keys[0]);\n              return true;\n            }\n            console.error(res.error);\n          }\n        }\n      }, 5000);\n    }\n  }\n}\n"],"mappings":"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"}