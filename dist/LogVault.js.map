{"version":3,"file":"LogVault.js","names":["_winston","require","_winston2","_interopRequireDefault","_path","_path2","_ip","_ip2","_mongodb","_mongodb2","_ioredis","_ioredis2","_sha","_sha2","_Notificator","_Notificator2","_telegram","_telegram2","_graylogHttp","_graylogHttp2","_email","_email2","obj","__esModule","default","timestamp","printf","winston","format","LogVault","constructor","config","levels","error","warn","info","http","verbose","debug","silly","maxLevel","appName","trackNodeEnv","trackServerIp","Object","keys","includes","Error","JSON","stringify","winstonLogger","createLogger","level","exitOnError","forEach","message","options","log","withConsole","colors","addColors","consoleFormat","output","transportConsole","transports","Console","combine","colorize","simple","add","withFiles","logPath","path","resolve","__dirname","fileMaxSize","fileStoragePeriod","logPathCombined","logPathError","logPathFile","logPathErrorFile","auditFile","transportFileCombined","DailyRotateFile","filename","datePattern","maxSize","maxFiles","transportFileError","withMongo","mongo","mongoTransport","transportMongo","withGraylog","graylog","GraylogHttpTransport","transportGraylog","metadata","process","env","npm_package_name","log_level","Date","app","NODE_ENV","serverIp","ip","address","redis","notificators","notificator","stringifiedData","stringifiedMessage","matched","regExp","test","hash","sha256","channels","channel","set","capture","methods","method","console","args","messages","values","dismissExceptions","on","e","stack","trackNotifications","redisOptions","Redis","push","Notificator","queueNotifications","telegram","Telegram","email","Email","self","transport","sendNextNotification","setInterval","queueTimeout","blkKey","name","isTransportBlocked","get","length","notification","del","parsedNotification","parse","res","send","blockOnErrorTimeout","exports"],"sources":["../src/LogVault.js"],"sourcesContent":["import winston from \"winston\";\nimport \"winston-daily-rotate-file\";\nimport path from \"path\";\nimport ip from \"ip\";\nimport mongoTransport from \"./transports/mongodb\";\nimport Redis from \"ioredis\";\nimport sha256 from \"sha256\";\nrequire(\"winston-mongodb\");\nimport Notificator from \"./Notificator\";\nimport Telegram from \"./transports_notifications/telegram\";\nimport GraylogHttpTransport from \"./transports/graylog-http\";\nimport Email from \"./transports_notifications/email\";\n\nconst { timestamp, printf } = winston.format;\n\nexport default class LogVault {\n  constructor(config = {}) {\n    // defaults\n    this.levels = {\n      error: 0,\n      warn: 1,\n      info: 2,\n      http: 3,\n      verbose: 4,\n      debug: 5,\n      silly: 6\n    };\n    const {\n      maxLevel = \"info\",\n      appName,\n      trackNodeEnv = true,\n      trackServerIp = true\n    } = config;\n\n    if (!Object.keys(this.levels).includes(maxLevel))\n      throw new Error(\n        `maxLevel \"${maxLevel}\" value is not included into ${JSON.stringify(\n          this.levels\n        )}`\n      );\n\n    this.maxLevel = maxLevel;\n    this.appName = appName;\n    this.trackNodeEnv = trackNodeEnv;\n    this.trackServerIp = trackServerIp;\n\n    this.winstonLogger = winston.createLogger({\n      levels: this.levels,\n      level: this.maxLevel,\n      exitOnError: false\n    });\n\n    Object.keys(this.levels).forEach((level) => {\n      this[level] = (message, options = {}) => {\n        options.level = level;\n        this.log(message, options);\n      };\n    });\n\n    return this;\n  }\n\n  withConsole(options = {}) {\n    const { level = this.maxLevel } = options;\n\n    const colors = {\n      error: \"red\",\n      warn: \"yellow\",\n      info: \"green\",\n      http: \"blue\",\n      verbose: \"magenta\",\n      debug: \"grey\",\n      silly: \"grey\"\n    };\n    winston.addColors(colors);\n\n    const consoleFormat = printf(({ level, message, timestamp }) => {\n      if (typeof message === \"object\")\n        message = \"\\n\" + JSON.stringify(message, null, 2);\n      const output = `\\t${timestamp} ${level} ${message}`;\n      return output;\n    });\n\n    const transportConsole = new winston.transports.Console({\n      level,\n      format: winston.format.combine(\n        timestamp(),\n        winston.format.colorize(),\n        winston.format.simple(),\n        consoleFormat\n      )\n    });\n\n    this.winstonLogger.add(transportConsole);\n    this.transportConsole = transportConsole;\n    return this;\n  }\n\n  withFiles(options = {}) {\n    const {\n      logPath = path.resolve(__dirname, \"logs\"),\n      fileMaxSize = \"1m\",\n      fileStoragePeriod = \"14d\"\n    } = options;\n    const logPathCombined = path.resolve(logPath, \"combined\");\n    const logPathError = path.resolve(logPath, \"error\");\n    const logPathFile = path.resolve(logPathCombined, \"combined-%DATE%.log\");\n    const logPathErrorFile = path.resolve(logPathError, \"error-%DATE%.log\");\n    const auditFile = path.resolve(logPath, \"audit\");\n    const transportFileCombined = new winston.transports.DailyRotateFile({\n      filename: logPathFile,\n      level: \"http\",\n      // format: combine(timestamp(), winston.format.prettyPrint()),\n      auditFile,\n      datePattern: \"YYYY-MM-DD\",\n      maxSize: fileMaxSize,\n      maxFiles: fileStoragePeriod,\n      exitOnError: false\n    });\n    const transportFileError = new winston.transports.DailyRotateFile({\n      filename: logPathErrorFile,\n      level: \"error\",\n      // format: combine(timestamp(), winston.format.prettyPrint()),\n      auditFile,\n      datePattern: \"YYYY-MM-DD\",\n      maxSize: fileMaxSize,\n      maxFiles: fileStoragePeriod,\n      exitOnError: false\n    });\n\n    this.winstonLogger.add(transportFileCombined);\n    this.winstonLogger.add(transportFileError);\n    this.transportFileCombined = transportFileCombined;\n    this.transportFileError = transportFileError;\n\n    return this;\n  }\n\n  withMongo(options) {\n    if (!options.level) options.level = this.maxLevel;\n    // const mongo = new winston.transports.MongoDB(options);\n    const mongo = new mongoTransport(options);\n    this.winstonLogger.add(mongo);\n    this.transportMongo = mongo;\n    return this;\n  }\n\n  withGraylog(options = {}) {\n    const graylog = new GraylogHttpTransport(options);\n    this.winstonLogger.add(graylog);\n    this.transportGraylog = graylog;\n    return this;\n  }\n\n  log(message, options = {}) {\n    const { level = \"info\" } = options;\n\n    const metadata = {\n      // message,\n      process: process.env.npm_package_name,\n      log_level: level,\n      timestamp: new Date()\n    };\n    if (this.appName) metadata.app = this.appName;\n    if (this.trackNodeEnv) metadata.env = process.env.NODE_ENV;\n    if (this.trackServerIp) metadata.serverIp = ip.address();\n\n    this.winstonLogger.log(level, {\n      message,\n      metadata\n    });\n\n    if (this.redis && this.notificators) {\n      this.notificators.forEach((notificator) => {\n        if (\n          notificator.level &&\n          this.levels[level] > this.levels[notificator.level]\n        )\n          return;\n        metadata.message = message;\n        const stringifiedData = JSON.stringify(metadata);\n        const stringifiedMessage =\n          typeof message === \"string\" ? message : JSON.stringify(message);\n        const matched = notificator.regExp.test(stringifiedMessage);\n        if (!matched) return;\n        const hash = sha256(stringifiedData);\n        notificator.channels.forEach((channel) => {\n          this.redis.set(`log-vault:alarm:${channel}:${hash}`, stringifiedData);\n        });\n      });\n    }\n  }\n\n  capture(options) {\n    const methods = [\"log\", ...Object.keys(this.levels)];\n    methods.forEach((method) => {\n      console[method] = (...args) => {\n        const messages = Object.values(args);\n        const level = method === \"log\" ? \"info\" : method;\n        messages.forEach((message) => this.log(message, { level }));\n      };\n    });\n\n    if (options?.dismissExceptions) return;\n    process.on(\"uncaughtException\", (e) => {\n      this.log(e.stack, { level: \"error\" });\n    });\n    return this;\n  }\n\n  trackNotifications(options = {}) {\n    const { redisOptions = {}, notificators = [] } = options;\n    this.redis = new Redis(redisOptions);\n    this.notificators = [];\n    notificators.forEach((options) =>\n      this.notificators.push(new Notificator(options))\n    );\n    return this;\n  }\n\n  queueNotifications(options = {}) {\n    if (!this.redis) return this.error(\"Notifications required redis setup\");\n    const transports = [];\n    if (options.telegram) {\n      const telegram = new Telegram(options.telegram);\n      transports.push(telegram);\n    }\n    if (options.email) {\n      const email = new Email(options.email);\n      transports.push(email);\n    }\n\n    const self = this;\n\n    transports.forEach(async (transport) => {\n      await sendNextNotification(transport);\n      setInterval(sendNextNotification, transport.queueTimeout);\n\n      async function sendNextNotification() {\n        const blkKey = `log-vault:blk-alarm-transport:${transport.name}`;\n        const isTransportBlocked = await self.redis.get(blkKey);\n        if (isTransportBlocked) return;\n\n        const keys = await self.redis.keys(\n          `log-vault:alarm:${transport.name}:*`\n        );\n        if (!keys?.length) return;\n        const notification = await self.redis.get(keys[0]);\n        await self.redis.del(keys[0]);\n        let parsedNotification;\n        try {\n          parsedNotification = JSON.parse(notification);\n        } catch (e) {}\n\n        try {\n          const res = await transport.send(parsedNotification);\n          if (!res) {\n            await self.redis.set(keys[0], notification);\n          }\n        } catch (e) {\n          await self.redis.set(\n            blkKey,\n            \"true\",\n            \"PX\",\n            transport.blockOnErrorTimeout\n          );\n          self.error(\n            `Failed to send log notification with ${transport.name}, \\n ${e.stack}`\n          );\n        }\n      }\n    });\n\n    return this;\n  }\n}\n"],"mappings":"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"}