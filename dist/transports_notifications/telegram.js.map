{"version":3,"file":"telegram.js","names":["_axios","require","_axios2","_interopRequireDefault","obj","__esModule","default","Telegram","constructor","options","token","group","baseUrl","queueTimeout","emoji","error","warn","info","http","verbose","debug","silly","blockOnErrorTimeout","name","send","notification","url","URL","res","axios","method","data","chat_id","text","format","parse_mode","timeout","ok","Error","JSON","stringify","log_level","process","env","NODE_ENV","timestamp","message","exports"],"sources":["../../src/transports_notifications/telegram.js"],"sourcesContent":["import axios from \"axios\";\n\nexport default class Telegram {\n  constructor(options) {\n    const {\n      token,\n      group,\n      baseUrl,\n      queueTimeout = 5000,\n      emoji = {\n        error: \"ðŸ”´\",\n        warn: \"ðŸŸ¡\",\n        info: \"ðŸŸ¢\",\n        http: \"ðŸ”µ\",\n        verbose: \"ðŸŸ£\",\n        debug: \"ðŸŸ¤\",\n        silly: \"âšª\"\n      },\n      blockOnErrorTimeout = 1000 * 60 * 60\n    } = options;\n    this.name = \"telegram\";\n    this.token = token;\n    this.group = group;\n    this.baseUrl = baseUrl;\n    this.queueTimeout = queueTimeout;\n    this.emoji = emoji;\n    this.blockOnErrorTimeout = blockOnErrorTimeout;\n  }\n\n  async send(notification) {\n    const baseUrl = this.baseUrl || \"https://api.telegram.org/\";\n    const url = new URL(`/bot${this.token}/sendMessage`, baseUrl);\n\n    // try {\n    const res = await axios({\n      url: url,\n      method: \"post\",\n      data: {\n        chat_id: this.group,\n        text: this.format(notification),\n        parse_mode: \"Markdown\"\n      },\n      timeout: 5000\n    });\n    if (res && res.data && res.data.ok === true) {\n      return true;\n    }\n    throw new Error(res.error || JSON.stringify(res.data));\n    // } catch (error) {\n    //   console.error('TG_LOG_NOTIFICATION_FAILED', error.cause || error.stack);\n    // }\n  }\n\n  format(data) {\n    const text = `${this.emoji[data.log_level]} *[${data.log_level}] ${\n      process.env.NODE_ENV\n    } * at _${data.timestamp}_.\n  \\`\\`\\`json\n${JSON.stringify(data.message, null, 2)}\n  \\`\\`\\`\n  ${\n    data.process\n      ? `\n   *Process:* ${data.process}`\n      : \"\"\n  }`;\n    return text;\n  }\n}\n"],"mappings":"2EAAA,IAAAA,MAAA,GAAAC,OAAA,UAA0B,IAAAC,OAAA,GAAAC,sBAAA,CAAAH,MAAA,WAAAG,uBAAAC,GAAA,UAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;;AAEX,MAAMG,QAAQ,CAAC;EAC5BC,WAAWA,CAACC,OAAO,EAAE;IACnB,MAAM;MACJC,KAAK;MACLC,KAAK;MACLC,OAAO;MACPC,YAAY,GAAG,IAAI;MACnBC,KAAK,GAAG;QACNC,KAAK,EAAE,IAAI;QACXC,IAAI,EAAE,IAAI;QACVC,IAAI,EAAE,IAAI;QACVC,IAAI,EAAE,IAAI;QACVC,OAAO,EAAE,IAAI;QACbC,KAAK,EAAE,IAAI;QACXC,KAAK,EAAE;MACT,CAAC;MACDC,mBAAmB,GAAG,IAAI,GAAG,EAAE,GAAG;IACpC,CAAC,GAAGb,OAAO;IACX,IAAI,CAACc,IAAI,GAAG,UAAU;IACtB,IAAI,CAACb,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACQ,mBAAmB,GAAGA,mBAAmB;EAChD;;EAEA,MAAME,IAAIA,CAACC,YAAY,EAAE;IACvB,MAAMb,OAAO,GAAG,IAAI,CAACA,OAAO,IAAI,2BAA2B;IAC3D,MAAMc,GAAG,GAAG,IAAIC,GAAG,CAAE,OAAM,IAAI,CAACjB,KAAM,cAAa,EAAEE,OAAO,CAAC;;IAE7D;IACA,MAAMgB,GAAG,GAAG,MAAM,IAAAC,eAAK,EAAC;MACtBH,GAAG,EAAEA,GAAG;MACRI,MAAM,EAAE,MAAM;MACdC,IAAI,EAAE;QACJC,OAAO,EAAE,IAAI,CAACrB,KAAK;QACnBsB,IAAI,EAAE,IAAI,CAACC,MAAM,CAACT,YAAY,CAAC;QAC/BU,UAAU,EAAE;MACd,CAAC;MACDC,OAAO,EAAE;IACX,CAAC,CAAC;IACF,IAAIR,GAAG,IAAIA,GAAG,CAACG,IAAI,IAAIH,GAAG,CAACG,IAAI,CAACM,EAAE,KAAK,IAAI,EAAE;MAC3C,OAAO,IAAI;IACb;IACA,MAAM,IAAIC,KAAK,CAACV,GAAG,CAACb,KAAK,IAAIwB,IAAI,CAACC,SAAS,CAACZ,GAAG,CAACG,IAAI,CAAC,CAAC;IACtD;IACA;IACA;EACF;;EAEAG,MAAMA,CAACH,IAAI,EAAE;IACX,MAAME,IAAI,GAAI,GAAE,IAAI,CAACnB,KAAK,CAACiB,IAAI,CAACU,SAAS,CAAE,MAAKV,IAAI,CAACU,SAAU;IAC7DC,OAAO,CAACC,GAAG,CAACC;IACb,UAASb,IAAI,CAACc,SAAU;AAC7B;AACA,EAAEN,IAAI,CAACC,SAAS,CAACT,IAAI,CAACe,OAAO,EAAE,IAAI,EAAE,CAAC,CAAE;AACxC;AACA;IACIf,IAAI,CAACW,OAAO;IACP;AACT,gBAAgBX,IAAI,CAACW,OAAQ,EAAC;IACtB;IACL,EAAC;IACA,OAAOT,IAAI;EACb;AACF,CAACc,OAAA,CAAAzC,OAAA,GAlEoBC,QAAQ"}